function [LCL] = cloudbaseplot(sounding,snum,plotornot,display)
%%cloudbaseplot
    %Function to estimate and plot cloud base in height coordinates.
    %
    %General form: [LCL] = cloudbaseplot(sounding,snum,plotornot,display)
    %
    %Output:
    %LCL: estimated height of cloud base in km
    %
    %Inputs:
    %sounding: a processed soundings data structure, as created by
        %IGRAimpfil or similar function
    %snum: sounding number
    %plotornot: create figures or not. 1 to create figures, any other value
    %to find cloud base without plotting.
    %display: give updates in command window. 0 to disable updates, any
    %other value to update.
    %
    %Planned additions include: guessing at multiple cloud bases, cloud
    %thickness, denotion of cloud base/clouds with lines/rectangles.
    %
    %Version Date: 8/29/17
    %Last major revision: 6/21/17
    %Written by Daniel Hueholt
    %North Carolina State University
    %Undergraduate Research Assistant at Environment Analytics
    %
    %See also wnaltplot, IGRAimpfil
    %

[r,~] = size(sounding); %Find the number of soundings
if r==1 %If it's oriented the other way
    [~,r] = size(sounding); %Find it this way instead
end

check = fieldnames(sounding);

if isempty(nonzeros(ismember(check,'rhum'))) == 1 %Check if the sounding has a relative humidity field, named rhum if generated by dewrelh or FWOKXh line
    for a = 1:r
        [sounding(a).dewpoint,sounding(a).relative_humidity] = dewrelh(sounding(a).temp,sounding(a).dew_point_dep); %Call to dewrelh to add dewpoint and relative humidity
    end
end

mb200 = find(sounding(snum).pressure >= 20000); %Find indices of readings where the pressure is greater than 20000 Pa
presheight = sounding(snum).pressure(mb200); %Select readings greater than 20000 Pa
presheightvector = presheight/100; %Convert Pa to hPa (mb)

% First geopotential height entry should be straight from the data, as the
% first calculated value will always be zero
if isnan(sounding(snum).geopotential(1))==0
    geoheightvector(1) = sounding(snum).geopotential(1)/1000;
    %disp('1 is good')
elseif isnan(sounding(snum).geopotential(1))==1 && isnan(sounding(snum).geopotential(2))==0
    geoheightvector(1) = sounding(snum).geopotential(2)/1000;
    disp('2 is good')
    disp(snum)
elseif isnan(sounding(snum).geopotential(1))==1 && isnan(sounding(snum).geopotential(2))==1 && isnan(sounding(snum).geopotential(3))==0
    geoheightvector(1) = sounding(snum).geopotential(3)/1000;
    disp('all the way to 3')
    disp(snum)
else
    disp('No measured value was available - first reading was left at calculated value of zero.')
    disp(snum)
end

geoheightvector = geoheightvector'; %Transpose to match shape of others

% Define rhum and temp as humidities and temp from surface to 200mb
% (temp is not plotted, but still needed to calculate geopotential height)
rhum = sounding(snum).rhum(mb200);
geotemp = sounding(snum).temp(mb200);

R = 287.75; %dry air constant J/(kgK)
grav = 9.81; %gravity m/s^2

for z = 2:length(presheightvector')
    geoheightvector(z) = (R/grav*(((geotemp(1)+273.15)+(geotemp(z)+273.15))/2)*log(presheightvector(1)/presheightvector(z)))/1000; %Equation to calculate geopotential height
end

% Extra quality control to prevent jumps in the graphs
geoheightvector(geoheightvector<-150) = NaN;
geoheightvector(geoheightvector>100) = NaN;
presheightvector(presheightvector<0) = NaN;
sounding(snum).rhum(sounding(snum).rhum<0) = NaN;
sounding(snum).dewpt(sounding(snum).dewpt<-150) = NaN;


% Find LCL (estimated as first height where RH=100); change RH value to be
% more or less careful about finding clouds
[r,~] = find(rhum>=98); %RH = 100 implies cloudbase; standard humidity sensor is accurate to within 2% http://weather.ou.edu/~soundoff/Final%20Capstone%20Paper.pdf
lcl = NaN; %Assume there isn't a cloud
if ~isempty(nonzeros(r)) %if there is a cloud base
    lcl = r(1); %the lowest cloud base is the first index
end
if isnan(lcl)==1 %otherwise if there isn't a cloud base
    LCL(1) = NaN; %pressure level
    LCL(2) = NaN; %height
else
    LCL(1) = presheightvector(lcl); %pressure level
    LCL(2) = geoheightvector(lcl); %height
end

if isnan(LCL(2))==1 && display~=0 %If there isn't a cloud base
    disp('No cloud!') %say so
    return %stop everything
end

if plotornot==1 %If plotting is enabled
    figure(92034); %new figure
    plot(snum,LCL(2),'^b') %plot cloud base height as blue up triangles
    datenum = num2str(sounding(snum).valid_date_num);
    title(['Sounding for ' datenum]) %title contains date number 
    xlabel('Sounding') %x axis is labeled as sounding number
    ylabel('Height in km')
    hold off
end

end