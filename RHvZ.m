function [] = RHvZ(snum,sounding)
%%RHvZ
    %Function to generate plot of relative huidity vs height
    %
    %General form: rhumplot(snum,sounding)
    %Outputs:
    %LCL - estimated level of cloud base
    %
    %Inputs:
    %snum: a sounding number (sounding number for a specific date can be found
    %   using findsnd or soundplots)
    %sounding: a soundings data structure
    %trz: logical to show a figure with subplots for Tvz and RHvz
    %
    %Version Date: 11/27/17
    %Written by: Daniel Hueholt
    %North Carolina State University
    %Undergraduate Researcher at Environment Analytics
    %
    %See also: soundplots, findsnd, IGRAimpf
    %

[r,~] = size(sounding); %Find the number of soundings
if r==1 %If it's oriented the other way
    [~,r] = size(sounding); %Find it this way instead
end

check = fieldnames(sounding); %Find fieldnames; this is used to check if dewpoint and relative humidity need to be added

if isempty(nonzeros(ismember(check,'rhum'))) == 1 %Check if the sounding has a relative humidity field, named rhum if generated by dewrelh
    for a = 1:r
        [sounding(a).dewpoint,sounding(a).relative_humidity] = dewrelh(sounding(a).temp,sounding(a).dew_point_dep); %Call to dewrelh to add dewpoint and relative humidity
    end
end

mb200 = find(sounding(snum).pressure >= 20000); %Find indices of readings where the pressure is greater than 20000 Pa
presheight = sounding(snum).pressure(mb200); %Select readings greater than 20000 Pa
presheightvector = presheight/100; %Convert Pa to hPa (mb)

%first geopotential height entry should be straight from the data
if isnan(sounding(snum).geopotential(1))==0
    geoheightvector(1) = sounding(snum).geopotential(1)/1000;
    %disp('1 is good')
elseif isnan(sounding(snum).geopotential(1))==1 && isnan(sounding(snum).geopotential(2))==0
    geoheightvector(1) = sounding(snum).geopotential(2)/1000;
    %disp('2 is good')
    %disp(snum)
elseif isnan(sounding(snum).geopotential(1))==1 && isnan(sounding(snum).geopotential(2))==1 && isnan(sounding(snum).geopotential(3))==0
    geoheightvector(1) = sounding(snum).geopotential(3)/1000;
    %disp('all the way to 3')
    %disp(snum)
else
    
end

geoheightvector = geoheightvector'; %Transpose to match shape of others, important for polyxpoly

% Define rhum and temp as humidities and temp from surface to 200mb
% (temp is not plotted, but still needed to calculate geopotential height)
rhum = sounding(snum).rhum(mb200);
geotemp = sounding(snum).temp(mb200);

R = 287.75; %dry air constant J/(kgK)
grav = 9.81; %gravity m/s^2

for z = 2:length(presheightvector')
    geoheightvector(z) = (R/grav*(((geotemp(1)+273.15)+(geotemp(z)+273.15))/2)*log(presheightvector(1)/presheightvector(z)))/1000; %%Equation comes from Durre and Yin (2008) http://journals.ametsoc.org/doi/pdf/10.1175/2008BAMS2603.1
end

% Extra quality control to prevent jumps in the graphs
geoheightvector(geoheightvector<-150) = NaN;
geoheightvector(geoheightvector>100) = NaN;
sounding(snum).rhum(sounding(snum).rhum<0) = NaN;
sounding(snum).dewpt(sounding(snum).dewpt<-150) = NaN;

figure; %New figure
plot(rhum,geoheightvector) %RHvz
dateString = num2str(sounding(snum).valid_date_num); %Used in title
hold on
cloudsaf = [80 80];
cloudspan = [0 13];
plot(cloudsaf,cloudspan,'r');
titleHand = title(['Sounding for ' dateString]);
set(titleHand,'FontName','Helvetica'); set(titleHand,'FontSize',14)
xlabelHand = xlabel('Relative Humidity in %');
set(xlabelHand,'FontName','Helvetica'); set(xlabelHand,'FontSize',14)
xlim([-2 102])
ylabelHand = ylabel('Height in km');
set(ylabelHand,'FontName','Helvetica'); set(ylabelHand,'FontSize',14)
ylim([0 13]);
axesHand = gca;
set(axesHand,'FontName','Helvetica'); set(axesHand,'FontSize',14)
hold off

end