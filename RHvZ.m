%%RHvZ
    %Function to generate plot of relative humidity vs height.
    %
    %General form: RHvZ(snum,sounding,max)
    %
    %Inputs:
    %snum: a sounding number (sounding number for a specific date can be found
    %   using findsnd or soundplots)
    %sounding: a soundings data structure
    %max: maximum height in figure (km)
    %
    %Version date: 6/05/2018
    %Last major revision: 6/05/2018
    %Written by: Daniel Hueholt
    %North Carolina State University
    %Undergraduate Researcher at Environment Analytics
    %
    %See also: soundplots, findsnd, IGRAimpf, rhumplot
    %

function [] = RHvZ(snum,sounding,max)
if ~exist('max','var') %Default value for max to show whole troposphere
    max = 12;
    msg = 'Max height defaults to 12km.';
    disp(msg);
end
 
r = length(sounding);

check = fieldnames(sounding); %Find fieldnames; this is used to check if dewpoint and relative humidity need to be added
if isempty(nonzeros(ismember(check,'rhum'))) == 1 %Check if the sounding has a relative humidity field, named rhum if generated by dewrelh
    for a = 1:r
        [sounding(a).dewpoint,sounding(a).relative_humidity] = dewrelh(sounding(a).temp,sounding(a).dew_point_dep); %Call to dewrelh to add dewpoint and relative humidity
    end
end

mb200 = find(sounding(snum).pressure >= 20000); %Find indices of readings where the pressure is greater than 20000 Pa
presheight = sounding(snum).pressure(mb200); %Select readings greater than 20000 Pa
presheightvector = presheight/100; %Convert Pa to hPa (mb)

%First geopotential height entry should, if possible, be straight from the data
if isnan(sounding(snum).geopotential(1))==0
    geoheightvector(1) = sounding(snum).geopotential(1)/1000;
    %disp('1 is good')
else
    %do nothing
end

geoheightvector = geoheightvector'; %Transpose to match shape of others, important for polyxpoly

% Define rhum and temp as humidities and temp from surface to 200mb as a
% basic cutoff for the stratosphere.
% (temp is not plotted, but still needed to calculate geopotential height)
rhum = sounding(snum).rhum(mb200);
geotemp = sounding(snum).temp(mb200);

R = 287.75; %dry air constant J/(kgK)
grav = 9.81; %gravity m/s^2

for z = 2:length(presheightvector')
    geoheightvector(z) = (R/grav*(((geotemp(1)+273.15)+(geotemp(z)+273.15))/2)*log(presheightvector(1)/presheightvector(z)))/1000; %%Equation comes from Durre and Yin (2008) http://journals.ametsoc.org/doi/pdf/10.1175/2008BAMS2603.1
end

% Extra quality control to prevent jumps in the graphs
geoheightvector(geoheightvector<-150) = NaN;
geoheightvector(geoheightvector>100) = NaN;
sounding(snum).rhum(sounding(snum).rhum<0) = NaN;
sounding(snum).dewpt(sounding(snum).dewpt<-150) = NaN;

figure;
RHLine = plot(rhum,geoheightvector); %RHvz
set(RHLine,'LineWidth',2.5)
dateString = num2str(sounding(snum).valid_date_num); %Used in title
hold on

cloudsaf = [80 80]; %Thresholding is bad but it's all we've got right now
cloudspan = [0 13];
cloudLine = plot(cloudsaf,cloudspan,'r');
set(cloudLine,'LineWidth',2.5)

axesHand = gca;
set(axesHand,'FontName','Lato Bold'); set(axesHand,'FontSize',12)
titleHand = title(['Sounding for ' dateString]);
set(titleHand,'FontName','Lato Bold'); set(titleHand,'FontSize',16)
xlabelHand = xlabel('Relative Humidity in %');
set(xlabelHand,'FontName','Lato Bold'); set(xlabelHand,'FontSize',16)
xlim([-2 102])
ylabelHand = ylabel('Height in km');
set(ylabelHand,'FontName','Lato Bold'); set(ylabelHand,'FontSize',16)
ylim([0 max]);
hold off

end